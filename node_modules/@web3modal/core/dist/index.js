import{proxy as p,subscribe as C}from"valtio/vanilla";import{Buffer as U}from"buffer";let L;const d={ethereumClient:void 0,setEthereumClient(e){L=e},client(){if(L)return L;throw new Error("ClientCtrl has no client set")}},s=p({address:void 0,profileName:void 0,profileAvatar:void 0,profileLoading:!1,balanceLoading:!1,balance:void 0,isConnected:!1}),A={state:s,subscribe(e){return C(s,()=>e(s))},getAccount(){const e=d.client().getAccount();s.address=e.address,s.isConnected=e.isConnected},async fetchProfile(e,t){try{s.profileLoading=!0;const n=t??s.address,{id:a}=d.client().getDefaultChain();if(n&&a===1){const[l,c]=await Promise.all([d.client().fetchEnsName({address:n,chainId:1}),d.client().fetchEnsAvatar({address:n,chainId:1})]);c&&await e(c),s.profileName=l,s.profileAvatar=c}}finally{s.profileLoading=!1}},async fetchBalance(e){try{s.balanceLoading=!0;const t=e??s.address;if(t){const n=await d.client().fetchBalance({address:t});s.balance={amount:n.formatted,symbol:n.symbol}}}finally{s.balanceLoading=!1}},setAddress(e){s.address=e},setIsConnected(e){s.isConnected=e},resetBalance(){s.balance=void 0},resetAccount(){s.address=void 0,s.isConnected=!1,s.profileName=void 0,s.profileAvatar=void 0,s.balance=void 0}},o=p({selectedChain:void 0,chains:void 0,standaloneChains:void 0,standaloneUri:void 0,isStandalone:!1,isCustomDesktop:!1,isCustomMobile:!1,isDataLoaded:!1,isUiLoaded:!1,walletConnectVersion:1}),i={state:o,subscribe(e){return C(o,()=>e(o))},setChains(e){o.chains=e},setStandaloneChains(e){o.standaloneChains=e},setStandaloneUri(e){o.standaloneUri=e},getSelectedChain(){const e=d.client().getNetwork().chain;return e&&(o.selectedChain=e),o.selectedChain},setSelectedChain(e){o.selectedChain=e},setIsStandalone(e){o.isStandalone=e},setIsCustomDesktop(e){o.isCustomDesktop=e},setIsCustomMobile(e){o.isCustomMobile=e},setIsDataLoaded(e){o.isDataLoaded=e},setIsUiLoaded(e){o.isUiLoaded=e},setWalletConnectVersion(e){o.walletConnectVersion=e}},b=p({projectId:"",mobileWallets:void 0,desktopWallets:void 0,walletImages:void 0,chainImages:void 0,tokenImages:void 0,standaloneChains:void 0,enableStandaloneMode:!1,enableNetworkView:!1,enableAccountView:!0,enableExplorer:!0,defaultChain:void 0,explorerAllowList:void 0,explorerDenyList:void 0,termsOfServiceUrl:void 0,privacyPolicyUrl:void 0}),S={state:b,subscribe(e){return C(b,()=>e(b))},setConfig(e){var t,n,a,l;if(i.setStandaloneChains(e.standaloneChains),i.setIsStandalone(!!((t=e.standaloneChains)!=null&&t.length)||!!e.enableStandaloneMode),i.setIsCustomMobile(!!((n=e.mobileWallets)!=null&&n.length)),i.setIsCustomDesktop(!!((a=e.desktopWallets)!=null&&a.length)),i.setWalletConnectVersion((l=e.walletConnectVersion)!=null?l:1),!i.state.isStandalone){const c=d.client().getDefaultChain();i.setSelectedChain(c),i.setChains(d.client().chains)}e.defaultChain&&i.setSelectedChain(e.defaultChain),Object.assign(b,e)}},E="https://explorer-api.walletconnect.com";function D(e){const t=Object.fromEntries(Object.entries(e).filter(([n,a])=>typeof a<"u"&&a!==null&&a!=="").map(([n,a])=>[n,a.toString()]));return new URLSearchParams(t).toString()}const y={async fetchWallets(e,t){const n=D(t),a=`${E}/v3/wallets?projectId=${e}&${n}`;return(await fetch(a)).json()},formatImageUrl(e,t){return`${E}/v3/logo/lg/${t}?projectId=${e}`}},u=p({wallets:{listings:[],total:0,page:1},search:{listings:[],total:0,page:1},previewWallets:[],recomendedWallets:[]});function I(){const{projectId:e}=S.state;if(!e)throw new Error("projectId is required to work with explorer api");return e}const _={state:u,async getPreviewWallets(e){const{listings:t}=await y.fetchWallets(I(),e);return u.previewWallets=Object.values(t),u.previewWallets},async getRecomendedWallets(){const{listings:e}=await y.fetchWallets(I(),{page:1,entries:6});u.recomendedWallets=Object.values(e)},async getPaginatedWallets(e){const{page:t,search:n}=e,{listings:a,total:l}=await y.fetchWallets(I(),e),c=Object.values(a),v=n?"search":"wallets";return u[v]={listings:[...u[v].listings,...c],total:l,page:t??1},{listings:c,total:l}},getImageUrl(e){return y.formatImageUrl(I(),e)},resetSearch(){u.search={listings:[],total:0,page:1}}},r=p({history:["ConnectWallet"],view:"ConnectWallet",data:void 0}),w={state:r,subscribe(e){return C(r,()=>e(r))},push(e,t){e!==r.view&&(r.view=e,t&&(r.data=t),r.history.push(e))},replace(e){r.view=e,r.history=[e]},goBack(){if(r.history.length>1){r.history.pop();const[e]=r.history.slice(-1);r.view=e}}},f=p({open:!1}),x={state:f,subscribe(e){return C(f,()=>e(f))},async open(e){return new Promise(t=>{const{isStandalone:n,isUiLoaded:a,isDataLoaded:l}=i.state,{isConnected:c}=A.state,{enableNetworkView:v}=S.state;if(n?(i.setStandaloneUri(e?.uri),i.setStandaloneChains(e?.standaloneChains),w.replace("ConnectWallet")):e!=null&&e.route?w.replace(e.route):c?w.replace("Account"):v?w.replace("SelectNetwork"):w.replace("ConnectWallet"),a&&l)f.open=!0,t();else{const N=setInterval(()=>{i.state.isUiLoaded&&i.state.isDataLoaded&&(clearInterval(N),f.open=!0,t())},200)}})},close(){f.open=!1}};var P=Object.defineProperty,O=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,W=(e,t,n)=>t in e?P(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,$=(e,t)=>{for(var n in t||(t={}))j.call(t,n)&&W(e,n,t[n]);if(O)for(var n of O(t))k.call(t,n)&&W(e,n,t[n]);return e};function M(){return typeof matchMedia<"u"&&matchMedia("(prefers-color-scheme: dark)").matches}const g=p({themeMode:M()?"dark":"light"}),B={state:g,subscribe(e){return C(g,()=>e(g))},setThemeConfig(e){const{themeMode:t,themeVariables:n}=e;t&&(g.themeMode=t),n&&(g.themeVariables=$({},n))}},h=p({open:!1,message:"",variant:"success"}),H={state:h,subscribe(e){return C(h,()=>e(h))},openToast(e,t){h.open=!0,h.message=e,h.variant=t},closeToast(){h.open=!1}},m={WALLETCONNECT_DEEPLINK_CHOICE:"WALLETCONNECT_DEEPLINK_CHOICE",isMobile(){return typeof window<"u"?!!(window.matchMedia("(pointer:coarse)").matches||/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)):!1},isAndroid(){return m.isMobile()&&navigator.userAgent.toLowerCase().includes("android")},isEmptyObject(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.getOwnPropertyNames(e).length===0&&Object.getOwnPropertySymbols(e).length===0},isHttpUrl(e){return e.startsWith("http://")||e.startsWith("https://")},formatNativeUrl(e,t,n){if(m.isHttpUrl(e))return this.formatUniversalUrl(e,t,n);let a=e;a.includes("://")||(a=e.replaceAll("/","").replaceAll(":",""),a=`${a}://`),this.setWalletConnectDeepLink(a,n);const l=encodeURIComponent(t);return`${a}wc?uri=${l}`},formatUniversalUrl(e,t,n){if(!m.isHttpUrl(e))return this.formatNativeUrl(e,t,n);let a=e;e.endsWith("/")&&(a=e.slice(0,-1)),this.setWalletConnectDeepLink(a,n);const l=encodeURIComponent(t);return`${a}/wc?uri=${l}`},async wait(e){return new Promise(t=>{setTimeout(t,e)})},openHref(e,t){window.open(e,t,"noreferrer noopener")},setWalletConnectDeepLink(e,t){localStorage.setItem(m.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:e,name:t}))},setWalletConnectAndroidDeepLink(e){const[t]=e.split("?");localStorage.setItem(m.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:t,name:"Android"}))},removeWalletConnectDeepLink(){localStorage.removeItem(m.WALLETCONNECT_DEEPLINK_CHOICE)},isNull(e){return e===null}};typeof window<"u"&&(window.Buffer||(window.Buffer=U),window.global||(window.global=window),window.process||(window.process={env:{}}));export{A as AccountCtrl,d as ClientCtrl,S as ConfigCtrl,m as CoreUtil,_ as ExplorerCtrl,x as ModalCtrl,i as OptionsCtrl,w as RouterCtrl,B as ThemeCtrl,H as ToastCtrl};
//# sourceMappingURL=index.js.map
